---
let {emoji, h3size, etiqueta, precoDe, precoPor, roundedBorders, noShadow, transparent, wfull, icon, borderIcon, align} = Astro.props

let iconHtml = emoji

let iconAlign = null
try{
  iconAlign = align?.value ? ( (align?.value?.includes('center') || icon?.align?.includes('center') || icon?.alignCenter) ? 'center' : null ) : null
} catch{
  iconAlign = null
}

let h3Html = ""
if (Astro.slots.has('h3')) {
  h3Html = await Astro.slots.render('h3');
}

let h3class = ""
switch (h3size) {
    case "big":
        h3class = "text-3xl font-bold mb-6"
        break;
    default: h3class = "text-2xl font-semibold mb-2"
        break;
}

import Check from "@assets/icons/roundCheckmark.astro";
import Person from "@assets/icons/personCheck.astro";

let Icon
switch (icon) {
    case "checkmark":
        Icon = Check
        break;
    case "person":
        Icon = Person
        break;
    default: 
        break;
}

let iconType = icon?.select
---
<div class:list={["w-full p-8 dark:text-white hover:scale-105 hover:shadow-4xl duration-500", etiqueta && "relative", ((roundedBorders && !transparent) ? "rounded-3xl":"rounded-[--rounded-box]"), (noShadow ? "":"shadow-2xl shadow-base-300"), (transparent ? "":"bg-transparent"), (wfull ? "max-w-screen-lg" : "max-w-sm")]}>
    {etiqueta && <div class="badge badge-success absolute top-3 right-4" set:html={etiqueta}/>}
    {borderIcon ? <div class:list={["text-primary fill-primary w-fit my-4 bg-primary/5 rounded-full border-primary border-4",(icon.select=="img"?"aspect-square":"[&>*]:w-16 [&>*]:h-16 p-8"),(iconAlign=="center" ? "mx-auto" : "inline-block" )]}>
        {(() => {
        switch(iconType) {
          case 'checkmark':
            return <Check/>
          case 'person':
            return <Person />
          case 'img':
            return <img src={icon.img} alt="Card Icon" class="object-cover w-32 h-32 rounded-full"/>
          default:
            return <div class="text-3xl grid place-items-center text-center leading-none" set:html={iconHtml}/>
        }
        })()}
    </div> : <div class:list={["mt-4 mb-2 text-primary",(iconAlign=="center" ? "w-fit mx-auto" : "inline-block")]}>
        {(() => {
        switch(iconType) {
          case 'checkmark':
            return <Check/>
          case 'person':
            return <Person />
          case 'img':
            return <img src={icon.img} alt="Card Icon" height="128" class="object-cover h-32"/>
          default:
            return <p class="text-3xl leading-none mb-0" set:html={iconHtml}/>
        }
        })()}
    </div>
}
    <h3 class={h3class} set:html={h3Html}/>
    <p><slot/></p>
    {precoPor &&
        <div class="text-center text-2xl font-bold mt-4">
            de <span class="text-red-600 line-through">{precoDe}</span> por <span class="text-green-600">{precoPor}</span>
    </div>}
</div>